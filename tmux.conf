# Unbind all keys
#unbind-key -a

# Enable mouse control
set -g mouse on

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# Default shell
set -g default-command "zsh"

# History setting
set -g history-limit 10000

# Make switching to cmd mode in zsh quick!
set -s escape-time 0

# Tmux messages are displayed for 4 seconds
set -g display-time 4000

# Focus events enabled for terminals that support them
set -g focus-events on

set -g status-keys vi
# vi-style controls in copy mode
setw -g mode-keys vi

# Turn on aggressive resize
setw -g aggressive-resize on

# Set the prefix key to <Ctrl-a>
set -g prefix C-a

# Start pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Renumber windows
set -g renumber-windows on

# Ctrl-R: Reload tmux config
bind r source-file ~/.tmux.conf \; display 'Config reloaded test'

# Pane handling
bind | split-window -h
bind - split-window -v

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# System clipboard
if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
} {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
}

# Nested prefix binding
## Send the prefix to client inside window
bind-key -n C-t send-prefix

# Paste from clipboard
bind P paste-buffer
unbind -T copy-mode-vi space
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Swapping windows (left/right)
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Swapping panes by index (up/down)
## Show pane indices: prefix + q
bind -r Up swap-pane -U
bind -r Down swap-pane -D

############################### PLUGINS ##################################
# List of themes
## Dracula theme and settings
set -g @plugin 'dracula/tmux'
set -g @dracula-plugins 'cpu-usage ram-usage time'
set -g @dracula-show-left-icon session

# List of plugins
### Update plugins           : prefix + U
### Install plugins          : prefix + I
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

## extrakto for tmux - quickly select, copy/insert/complete text without a mouse
### Shortcut: prefix + tab
set -g @plugin 'laktak/extrakto'

## tmux-jump - Vimium/Easymotion like navigation for tmux
### Shortcut: prefix + s
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 's'

## tmux suspend
### Shortcut: F12
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

# vim tmux integration
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

